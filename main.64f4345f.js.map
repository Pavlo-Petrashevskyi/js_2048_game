{"version":3,"sources":["scripts/main.js"],"names":["cellsArray","document","querySelectorAll","usedCells","startButton","querySelector","startMessage","loseMessage","winMessage","score","transitionTime","isWinMessage","randomizer","numberToRandom","Math","floor","random","changeStartButton","newClass","startButtonClasses","classList","remove","length","add","toLowerCase","innerText","addNumberToFreeCell","cellNumber","i","runningCell","createElement","freeCells","filter","cell","includes","randomCell","randomCellClass","push","style","top","offsetTop","left","offsetLeft","slice","parentElement","append","clearGame","map","innerHTML","checkForLose","tops","runningCellsArray","filteredAndSortedRunCells","forEach","topValue","sort","a","b","canContinueGame","nextCell","nextUpCell","checkForWin","numberOfCell","removeEventListener","handleInput","setTimeout","moveCell","way","cellsTops","cellsMoveTimes","indentation","runCellsRow","fieldCellsRow","runCell","reverse","changedCellsRow","cellsToRemove","cellToMove","curRunCell","nextRunCell","undefined","number","splice","scoreValue","setMove","addEventListener","once","e","contains","moveButtonsCodes","keyCode"],"mappings":"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","file":"main.64f4345f.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst cellsArray = [...document.querySelectorAll('.field-cell')];\nconst usedCells = [];\nconst startButton = document.querySelector('button.button');\nconst startMessage = document.querySelector('.message-start');\nconst loseMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\nconst score = document.querySelector('.game-score');\nconst transitionTime = 300;\nlet isWinMessage = false;\n\nfunction randomizer(numberToRandom = 9) {\n  return Math.floor(Math.random() * numberToRandom);\n}\n\nfunction changeStartButton(newClass) {\n  const startButtonClasses = startButton.classList;\n\n  startButtonClasses.remove(startButtonClasses[startButtonClasses.length - 1]);\n  startButtonClasses.add(newClass.toLowerCase());\n  startButton.innerText = newClass;\n}\n\nfunction addNumberToFreeCell(cellNumber) {\n  for (let i = 0; i < cellNumber; i++) {\n    const runningCell = document.createElement('div');\n    const freeCells = cellsArray.filter(cell => !usedCells.includes(cell));\n    const randomCell = freeCells[randomizer(freeCells.length - 1)];\n    const randomCellClass = randomizer() === 4\n      ? 'running-cell--4' : 'running-cell--2';\n\n    usedCells.push(randomCell);\n    runningCell.classList.add('running-cell', randomCellClass);\n    runningCell.style.top = `${randomCell.offsetTop}px`;\n    runningCell.style.left = `${randomCell.offsetLeft}px`;\n    runningCell.innerText = randomCellClass.slice(14);\n    cellsArray[0].parentElement.append(runningCell);\n  }\n};\n\nfunction clearGame() {\n  [...document.querySelectorAll('.running-cell')].map(cell => cell.remove());\n  isWinMessage = false;\n  winMessage.classList.add('hidden');\n  loseMessage.classList.add('hidden');\n  usedCells.length = 0;\n  score.innerHTML = 0;\n};\n\nfunction checkForLose() {\n  const tops = [10, 95, 180, 265];\n  const runningCellsArray = [...document.querySelectorAll('.running-cell')];\n\n  if (runningCellsArray.length === 16) {\n    const filteredAndSortedRunCells = [];\n\n    tops.forEach(topValue => runningCellsArray\n      .filter(cell => cell.offsetTop === topValue)\n      .sort((a, b) => a.offsetLeft - b.offsetLeft)\n      .forEach(cell => filteredAndSortedRunCells.push(cell))\n    );\n\n    let canContinueGame = false;\n\n    for (let i = 0; i < filteredAndSortedRunCells.length; i++) {\n      const cell = filteredAndSortedRunCells[i];\n      const nextCell = filteredAndSortedRunCells[i + 1];\n      const nextUpCell = filteredAndSortedRunCells[i + 4];\n\n      if (nextCell && nextCell.offsetTop === cell.offsetTop\n        && nextCell.innerText === cell.innerText) {\n        canContinueGame = true;\n\n        break;\n      }\n\n      if (nextUpCell && nextUpCell.offsetLeft === cell.offsetLeft\n        && nextUpCell.innerText === cell.innerText) {\n        canContinueGame = true;\n\n        break;\n      }\n    }\n\n    if (!canContinueGame) {\n      loseMessage.classList.remove('hidden');\n    }\n  }\n}\n\nfunction checkForWin(numberOfCell) {\n  if (numberOfCell === 2048) {\n    isWinMessage = true;\n    document.removeEventListener('keydown', handleInput);\n    setTimeout(() => winMessage.classList.remove('hidden'), transitionTime);\n  }\n}\n\nfunction moveCell(way) {\n  const cellsTops = [10, 95, 180, 265];\n  const runningCellsArray = [...document.querySelectorAll('.running-cell')];\n  let cellsMoveTimes = 0;\n\n  usedCells.length = 0;\n\n  cellsTops.map(indentation => {\n    let runCellsRow = [...runningCellsArray];\n    let fieldCellsRow = [...cellsArray];\n\n    if (way === 37 || way === 39) {\n      runCellsRow = runCellsRow\n        .filter(runCell => runCell.offsetTop === indentation);\n\n      fieldCellsRow = fieldCellsRow\n        .filter(runCell => runCell.offsetTop === indentation);\n    }\n\n    if (way === 38 || way === 40) {\n      runCellsRow = runCellsRow\n        .filter(runCell => runCell.offsetLeft === indentation);\n\n      fieldCellsRow = fieldCellsRow\n        .filter(runCell => runCell.offsetLeft === indentation);\n    }\n\n    if (way === 37) {\n      runCellsRow = runCellsRow\n        .sort((a, b) => a.offsetLeft - b.offsetLeft);\n    }\n\n    if (way === 38) {\n      runCellsRow = runCellsRow\n        .sort((a, b) => a.offsetTop - b.offsetTop);\n    }\n\n    if (way === 39) {\n      runCellsRow = runCellsRow\n        .sort((a, b) => b.offsetLeft - a.offsetLeft);\n      fieldCellsRow.reverse();\n    }\n\n    if (way === 40) {\n      runCellsRow = runCellsRow\n        .sort((a, b) => b.offsetTop - a.offsetTop);\n      fieldCellsRow.reverse();\n    }\n\n    if (runCellsRow.length > 0) {\n      const changedCellsRow = [];\n      const cellsToRemove = [];\n\n      for (let i = 0; i < runCellsRow.length; i++) {\n        const cellToMove = fieldCellsRow[i];\n        const curRunCell = runCellsRow[i];\n        const nextRunCell = runCellsRow[i + 1];\n\n        if (nextRunCell !== undefined\n          && +curRunCell.innerHTML === +nextRunCell.innerHTML) {\n          if (way === 37 || way === 38) {\n            const number = +nextRunCell.innerHTML * 2;\n\n            changedCellsRow.push({\n              cell: nextRunCell,\n              number: number,\n            });\n            cellsToRemove.push(curRunCell);\n            runCellsRow.splice(i, 1);\n            checkForWin(number);\n          }\n\n          if (way === 39 || way === 40) {\n            const number = +curRunCell.innerHTML * 2;\n\n            changedCellsRow.push({\n              cell: curRunCell,\n              number: number,\n            });\n            cellsToRemove.push(nextRunCell);\n            runCellsRow.splice(i + 1, 1);\n            checkForWin(number);\n          }\n\n          if (way === 37 || way === 39) {\n            curRunCell.style.left = `${cellToMove.offsetLeft}px`;\n            nextRunCell.style.left = `${cellToMove.offsetLeft}px`;\n          }\n\n          if (way === 38 || way === 40) {\n            curRunCell.style.top = `${cellToMove.offsetTop}px`;\n            nextRunCell.style.top = `${cellToMove.offsetTop}px`;\n          }\n\n          usedCells.push(cellToMove);\n          cellsMoveTimes += 1;\n\n          continue;\n        }\n\n        if (way === 37) {\n          if (cellToMove.offsetLeft < curRunCell.offsetLeft) {\n            curRunCell.style.left = `${cellToMove.offsetLeft}px`;\n            cellsMoveTimes += 1;\n          }\n        }\n\n        if (way === 38) {\n          if (cellToMove.offsetTop < curRunCell.offsetTop) {\n            curRunCell.style.top = `${cellToMove.offsetTop}px`;\n            cellsMoveTimes += 1;\n          }\n        }\n\n        if (way === 39) {\n          if (curRunCell.offsetLeft < cellToMove.offsetLeft) {\n            curRunCell.style.left = `${cellToMove.offsetLeft}px`;\n            cellsMoveTimes += 1;\n          }\n        }\n\n        if (way === 40) {\n          if (curRunCell.offsetTop < cellToMove.offsetTop) {\n            curRunCell.style.top = `${cellToMove.offsetTop}px`;\n            cellsMoveTimes += 1;\n          }\n        }\n\n        usedCells.push(cellToMove);\n      }\n\n      setTimeout(() => {\n        let scoreValue = 0;\n\n        changedCellsRow.map(({ cell, number }) => {\n          cell.classList.remove(`running-cell--${number / 2}`);\n          cell.classList.add(`running-cell--${number}`);\n          cell.innerText = number;\n          scoreValue += number;\n        });\n        cellsToRemove.map(cell => cell.remove());\n        score.innerHTML = +score.innerHTML + scoreValue;\n      }, transitionTime);\n    }\n  });\n\n  if ((cellsMoveTimes > 0 && !isWinMessage) && runningCellsArray.length < 16) {\n    setTimeout(() => {\n      addNumberToFreeCell(1);\n      checkForLose();\n    }, transitionTime);\n  }\n\n  if (!isWinMessage) {\n    setTimeout(() => setMove(), transitionTime * 1.05);\n  }\n}\n\nstartButton.addEventListener('click', () => {\n  if (startButton.classList.contains('start')) {\n    startMessage.classList.add('hidden');\n    addNumberToFreeCell(2);\n    setMove();\n    changeStartButton('Restart');\n\n    return startButton;\n  }\n\n  clearGame();\n  addNumberToFreeCell(2);\n  setMove();\n});\n\nfunction setMove() {\n  document.addEventListener('keydown', handleInput, { once: true });\n};\n\nfunction handleInput(e) {\n  if (startButton.classList.contains('restart')) {\n    const moveButtonsCodes = [37, 38, 39, 40];\n\n    switch (true) {\n      case moveButtonsCodes.includes(e.keyCode):\n        moveCell(e.keyCode);\n        break;\n\n      default:\n        return setMove();\n    }\n  }\n}\n"]}